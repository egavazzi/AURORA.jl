### A Pluto.jl notebook ###
# v0.19.36

using Markdown
using InteractiveUtils

# ╔═╡ 5251e728-3797-4cf3-acea-d1914fa8efcd
begin
	import Pkg
	Pkg.activate(Base.current_project(@__DIR__))
end

# ╔═╡ b5f8e059-d017-4e74-a8de-08f9a65271c8
using AURORA

# ╔═╡ 459bd9b1-6182-4e71-9450-c24187501124
using CairoMakie

# ╔═╡ 98fe1766-f2d0-4fe3-9a83-efc2fc2773d3
html"""<style>
main {
    max-width: 80%;
    margin-left:10%;
    margin-right: 10% !important;
}
"""

# ╔═╡ cef6bcc7-de0d-40ef-8702-e5802763b413
md"#### Load the setup"

# ╔═╡ 7b36b57c-d26d-4c08-adf2-25747d542143
# ╠═╡ show_logs = false
begin
	msis_file = pkgdir(AURORA, "internal_data/data_neutrals/msis20181207.txt") # path to the msis file
	iri_file = pkgdir(AURORA, "internal_data/data_electron/iri20181207.txt")   # path to the iri file
	altitude_max = 500;         # (km) top altitude of the ionosphere
	θ_lims = 180:-10:0;         # (°) angle-limits for the electron beams
	E_max = 7000;               # (eV) upper limit to the energy grid
	
	# h_atm, ne, Te, E, dE, n_neutrals, E_levels_neutrals, σ_neutrals, μ_lims, μ_center,
	# μ_scatterings = setup_new(altitude_max, θ_lims, E_max, msis_file, iri_file);
	E, dE = make_energy_grid(E_max)
end

# ╔═╡ 81ddbb69-8a55-4144-bbe9-ea916fc0b93e
md"#### Calculate B2B with the new scattering matrices"

# ╔═╡ ca8c72f6-584e-4633-9323-1275e1727f54
Pmu2mup, theta2beamW, BeamWeight_relative, θ₁ = load_scattering_matrices(θ_lims, 720);

# ╔═╡ c84a59b9-4e89-404c-84c0-2229be3e9362
begin
	phaseN2e, phaseN2i = phase_fcn_N2(θ₁, E);
	phaseO2e, phaseO2i = phase_fcn_O2(θ₁, E);
	phaseOe, phaseOi = phase_fcn_O(θ₁, E);
	phase_fcn_neutrals = ((phaseN2e, phaseN2i), (phaseO2e, phaseO2i), (phaseOe, phaseOi));
	cascading_neutrals = (cascading_N2, cascading_O2, cascading_O) # tuple of functions
	
	iE = 400
	B2B_elastic = Vector{Matrix{Float64}}(undef, 3);
	B2B_inelastic = Vector{Matrix{Float64}}(undef, 3);
	for i in 1:3
		phase_fcn = phase_fcn_neutrals[i]
	    phase_fcn_e = convert_phase_fcn_to_3D(phase_fcn[1][:, iE], θ₁);
	    phase_fcn_i = convert_phase_fcn_to_3D(phase_fcn[2][:, iE], θ₁);
	    B2B_elastic[i] = beams2beams(phase_fcn_e, Pmu2mup, BeamWeight_relative);
	    B2B_inelastic[i] = beams2beams(phase_fcn_i, Pmu2mup, BeamWeight_relative);
	end
end

# ╔═╡ 9527356a-4dff-4819-8b56-a3071ab4a74d
md"#### Calculate B2B with the old scattering matrices"

# ╔═╡ 93bcc5dc-5c75-4d50-97ed-e2a153e11c32
path_to_AURORA_matlab = "/mnt/Ubuntu/home/etienne/Documents/MATLAB/AURORA/"

# ╔═╡ eba2b54b-9603-466e-aa58-e2f4237eb930
_, _, μ_scatterings = AURORA.load_old_scattering_matrices(path_to_AURORA_matlab, θ_lims)

# ╔═╡ f70d3be7-3c27-4fce-8645-7c62f36530f6
begin
	θ₁_old = range(0, π, length=721);
	phaseN2e_old, phaseN2i_old = phase_fcn_N2(θ₁_old, E);
	phaseO2e_old, phaseO2i_old = phase_fcn_O2(θ₁_old, E);
	phaseOe_old, phaseOi_old = phase_fcn_O(θ₁_old, E);
	phase_fcn_neutrals_old = ((phaseN2e_old, phaseN2i_old), (phaseO2e_old, phaseO2i_old), (phaseOe_old, phaseOi_old));
	
	B2B_elastic_old = Vector{Matrix{Float64}}(undef, 3);
	B2B_inelastic_old = Vector{Matrix{Float64}}(undef, 3);
	for i in 1:3
		phase_fcn = phase_fcn_neutrals_old[i]
		phase_fcn_e = convert_phase_fcn_to_3D(phase_fcn[1][:, iE], θ₁_old);
	    phase_fcn_i = convert_phase_fcn_to_3D(phase_fcn[2][:, iE], θ₁_old);
	    B2B_elastic_old[i] = beams2beams(phase_fcn_e, μ_scatterings.Pmu2mup, μ_scatterings.BeamWeight_relative);
	    B2B_inelastic_old[i] = beams2beams(phase_fcn_i, μ_scatterings.Pmu2mup, μ_scatterings.BeamWeight_relative);
	end
end

# ╔═╡ d23bd6ba-5023-4257-b10b-faa6f75f584a
md"# Plots"

# ╔═╡ 88a5473a-aee0-4fc0-a5a6-d46c8b144361
md"##### Differences between the B2B elastic matrices :"

# ╔═╡ d9b9fa25-d54b-406d-8a83-78207502308d
begin
	species = ["N2", "O2", "O"];
	
	f = Figure(resolution=(1200, 800))
		for i in 1:3
		ax = Axis(f[1, i][1, 1], xticks=1:2:18, xminorticksvisible=true, yticks=1:2:18, yminorticksvisible=true, title = species[i])
		h = heatmap!(ax, B2B_elastic[i])
		cb = Colorbar(f[1, i][1, 2], h)
	end
	Label(f[1, 4], "B2B matrices", tellheight=false)
	for i in 1:3
		diff = (B2B_elastic[i] .- B2B_elastic_old[i])
		ax = Axis(f[2, i][1, 1], xticks=1:2:18, xminorticksvisible=true, yticks=1:2:18, yminorticksvisible=true)
		h = heatmap!(ax, diff)
		cb = Colorbar(f[2, i][1, 2], h)
	end
	Label(f[2, 4], "Absolute \n difference", tellheight=false)
	for i in 1:3
		diff = (B2B_elastic[i] .- B2B_elastic_old[i]) ./ B2B_elastic[i]
		ax = Axis(f[3, i][1, 1], xticks=1:2:18, xminorticksvisible=true, yticks=1:2:18, yminorticksvisible=true)
		h = heatmap!(ax, diff)
		cb = Colorbar(f[3, i][1, 2], h)
	end
	Label(f[3, 4], "Relative \n difference", tellheight=false)
	f
end

# ╔═╡ e207adda-62e8-4100-830f-80e6c4284f7a
md" ##### Differences between the B2B inelastic matrices :"

# ╔═╡ 3f5521fc-5a7f-4a5b-93db-0e7f5e77fdc9

begin	
	f2 = Figure(resolution=(1200, 800))
	for i in 1:3
		ax = Axis(f2[1, i][1, 1], xticks=1:2:18, xminorticksvisible=true, yticks=1:2:18, yminorticksvisible=true, title = species[i])
		h = heatmap!(ax, B2B_inelastic[i])
		cb = Colorbar(f2[1, i][1, 2], h)
	end
	Label(f2[1, 4], "B2B matrices", tellheight=false)
	for i in 1:3
		diff = (B2B_inelastic[i] .- B2B_inelastic_old[i])
		ax = Axis(f2[2, i][1, 1], xticks=1:2:18, xminorticksvisible=true, yticks=1:2:18, yminorticksvisible=true)
		h = heatmap!(ax, diff)
		cb = Colorbar(f2[2, i][1, 2], h)
	end
	Label(f2[2, 4], "Absolute \n difference", tellheight=false)
	for i in 1:3
		diff = (B2B_inelastic[i] .- B2B_inelastic_old[i]) ./ B2B_inelastic[i]
		ax = Axis(f2[3, i][1, 1], xticks=1:2:18, xminorticksvisible=true, yticks=1:2:18, yminorticksvisible=true)
		h = heatmap!(ax, diff)
		cb = Colorbar(f2[3, i][1, 2], h)
	end
	Label(f2[3, 4], "Relative \n difference", tellheight=false)
	f2
end

# ╔═╡ Cell order:
# ╟─98fe1766-f2d0-4fe3-9a83-efc2fc2773d3
# ╠═5251e728-3797-4cf3-acea-d1914fa8efcd
# ╠═b5f8e059-d017-4e74-a8de-08f9a65271c8
# ╟─cef6bcc7-de0d-40ef-8702-e5802763b413
# ╠═7b36b57c-d26d-4c08-adf2-25747d542143
# ╟─81ddbb69-8a55-4144-bbe9-ea916fc0b93e
# ╠═ca8c72f6-584e-4633-9323-1275e1727f54
# ╠═c84a59b9-4e89-404c-84c0-2229be3e9362
# ╟─9527356a-4dff-4819-8b56-a3071ab4a74d
# ╠═93bcc5dc-5c75-4d50-97ed-e2a153e11c32
# ╠═eba2b54b-9603-466e-aa58-e2f4237eb930
# ╠═f70d3be7-3c27-4fce-8645-7c62f36530f6
# ╟─d23bd6ba-5023-4257-b10b-faa6f75f584a
# ╟─459bd9b1-6182-4e71-9450-c24187501124
# ╟─88a5473a-aee0-4fc0-a5a6-d46c8b144361
# ╟─d9b9fa25-d54b-406d-8a83-78207502308d
# ╟─e207adda-62e8-4100-830f-80e6c4284f7a
# ╟─3f5521fc-5a7f-4a5b-93db-0e7f5e77fdc9
